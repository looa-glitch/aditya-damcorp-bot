{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/8/2/002.\n */\n\nimport { array_unique } from 'array-hyper-unique';\nimport * as _table_cn2tw from 'chinese_convert/cn2tw';\nimport * as _table_tw2cn from 'chinese_convert/tw2cn';\nimport UString = require('uni-string');\nimport { _re_cjk_conv } from 'regexp-helper/lib/cjk-conv';\n\nexport interface ITable\n{\n\t[key: string]: string,\n}\n\nexport function charMap(s: string, table: ITable)\n{\n\tlet t = table[s];\n\treturn (typeof t === 'string') ? t : s\n}\n\nexport function textMap1(text: string, table: ITable)\n{\n\tlet toText = [];\n\tlet len = text.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(text[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('')\n}\n\nexport function textMap2(text: string, table: ITable)\n{\n\tlet toText = UString.split(text, '');\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap3(text: string, table: ITable)\n{\n\tlet toText = text.split(/(?:)/u);\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap4(text: string, table: ITable)\n{\n\treturn text.replace(REGEXP_TEST, function (s)\n\t{\n\t\treturn charMap(s, table);\n\t});\n}\n\nexport { textMap4 as textMap }\nconst textMap = textMap4;\n\nexport default exports as typeof import('./core');\n\nexport function removeSame(table: ITable)\n{\n\treturn Object.entries(table)\n\t\t.reduce(function (a, b)\n\t\t{\n\t\t\tlet [k, v] = b;\n\n\t\t\tif (k != v)\n\t\t\t{\n\t\t\t\ta[k] = v;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {} as ITable)\n\t;\n}\n\nexport interface IOptions\n{\n\t/**\n\t * 忽略的字 or 任何支援 indexOf 的 Object\n\t */\n\tskip?,\n\n\ttable?: ITable | typeof _call,\n\n\tsafe?: boolean,\n\n\ttableOnly?: boolean,\n}\n\nexport const defaultOptions = Object.freeze({\n\tsafe: true,\n});\nexport const REGEXP_TEST = _re_cjk_conv('ug');\n\nexport const SAFE_MODE_CHAR = array_unique([\n\t'后',\n\t'里',\n\t'餵',\n\t'志',\n\t'布',\n\t'佈',\n\t'系',\n\t'繫',\n\t'梁',\n\t'樑',\n\t'衝',\n\t'沖',\n\t'谷',\n\t'穀',\n\t'注',\n\t'克',\n]);\n\nexport function getOptionsSkip(options: IOptions, skip = SAFE_MODE_CHAR)\n{\n\tif (!options.skip)\n\t{\n\t\toptions.skip = skip.slice();\n\t}\n\telse if (typeof options.skip == 'string')\n\t{\n\t\toptions.skip += skip.join('');\n\t}\n\telse if (Array.isArray(options.skip))\n\t{\n\t\toptions.skip = options.skip.slice().concat(skip);\n\t}\n\telse\n\t{\n\t\toptions.table = skip.reduce(function (a, b)\n\t\t{\n\t\t\ta[b] = b;\n\n\t\t\treturn a;\n\t\t}, Object.assign({}, options.table || {}));\n\t}\n\n\treturn options;\n}\n\nexport function getOptions(options: IOptions = {}, defaultOpts = defaultOptions, skip = SAFE_MODE_CHAR)\n{\n\toptions = Object.assign({}, defaultOpts, options);\n\n\tif (options.safe)\n\t{\n\t\toptions = getOptionsSkip(options, skip);\n\n\t\t//console.log(options);\n\t}\n\n\treturn options;\n}\n\nexport function _call(fn, text: string, options: IOptions = {}, ...argv)\n{\n\toptions = getOptions(options);\n\n\tif (options.skip || options.table || options.tableOnly)\n\t{\n\t\tlet { skip, table, tableOnly } = options;\n\t\tlet not_tableOnly = !tableOnly;\n\n\t\tif (tableOnly && !table)\n\t\t{\n\t\t\tthrow new Error(`table is ${table}`);\n\t\t}\n\n\t\treturn text.replace(REGEXP_TEST, function (text)\n\t\t{\n\t\t\tif (skip && skip.indexOf(text) !== -1)\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\telse if (table && typeof table == 'function')\n\t\t\t{\n\t\t\t\tlet ret = table(fn, text, options, ...argv);\n\n\t\t\t\tif (ret !== null && typeof ret != 'undefined')\n\t\t\t\t{\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (table && table[text])\n\t\t\t{\n\t\t\t\treturn table[text];\n\t\t\t}\n\t\t\telse if (not_tableOnly)\n\t\t\t{\n\t\t\t\treturn fn(text);\n\t\t\t}\n\n\t\t\treturn text;\n\t\t});\n\t}\n\n\treturn fn(text, options, ...argv);\n}\n"]}