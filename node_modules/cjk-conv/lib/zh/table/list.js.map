{"version":3,"file":"list.js","sourceRoot":"","sources":["list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/6/10/010.\n */\n\nimport zhTable, { IOptions as IOptionsZhTable } from './index';\nimport { IOptions as IOptionsCjkConv } from '../convert';\nimport { cn2tw } from '../convert';\nimport { cjk2jp, cjk2zhs, cjk2zht } from '../../jp';\n\nimport UString from 'uni-string';\nimport { _greedyTableBuild, greedyTableReplace, greedyTableTest } from './greedy';\n\nexport type IOptions = {\n\toptionsZhTable?: IOptionsZhTable,\n\tskip?,\n\n\tlang?: 'cn' | 'jp' | 'auto' | string,\n}\n\n/**\n *\n * @example\n * ```\n * charTableList('司马')\n * // => [ [ '司' ], [ '馬', '马' ] ]\n * ```\n */\nexport function charTableList(text: string, options: IOptions = {}): string[][]\n{\n\tlet a = UString.split(text, '');\n\n\toptions = Object.assign({}, options);\n\tlet optionsZhTable: IOptionsZhTable = Object.assign({\n\t\tsafe: true,\n\t\tskip: options.skip,\n\t}, options.optionsZhTable);\n\n\tlet fn = zhTable[options.lang || 'auto'];\n\n\treturn a\n\t\t.reduce(function (a, c)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ta.push(fn(c, optionsZhTable));\n\n\t\t\treturn a;\n\t\t}, [])\n\t\t;\n}\n\n/**\n *\n * @example\n * textList('司马')\n * // => [ '司馬', '司马' ]\n */\nexport function textList(text: string, options: IOptions = {}): string[]\n{\n\tlet aa = [];\n\n\tlet arr = charTableList(text, options);\n\n\tif (arr.length <= 1)\n\t{\n\t\tif (Array.isArray(arr[0]))\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tarr = arr[0];\n\t\t}\n\n\t\t// @ts-ignore\n\t\treturn arr;\n\t}\n\n\tarr\n\t\t.forEach(function (v, index, arr)\n\t\t{\n\t\t\tf(v, '', index, arr);\n\t\t})\n\t;\n\n\tfunction f(v: string[], str = '', index, arr, depth = 0)\n\t{\n\t\treturn v.reduce(function (a, c)\n\t\t{\n\t\t\tlet s = str + c;\n\t\t\tlet i = index + 1;\n\n\t\t\tif (i < arr.length)\n\t\t\t{\n\t\t\t\tlet r = f(arr[i], s, i, arr, depth + 1);\n\t\t\t}\n\t\t\telse if ((depth + 1) == arr.length)\n\t\t\t{\n\t\t\t\t//console.log(777, s, [str, c], index, depth);\n\n\t\t\t\taa.push(s);\n\t\t\t}\n\n\t\t\treturn a\n\t\t}, [])\n\t}\n\n\taa.sort();\n\n\treturn aa;\n}\n\n/**\n * @example\n * arrCjk(['司马', '上官', '欧阳', '夏侯'])\n * // => [ '司马', '上官', '欧阳', '夏侯', '司馬', '歐陽', '欧陽' ]\n */\nexport function arrCjk(arr: string[], options: IOptionsCjkConv = {}): string[]\n{\n\treturn arr\n\t// @ts-ignore\n\t\t.concat(arr.map(w(cjk2zht)))\n\t\t// @ts-ignore\n\t\t.concat(arr.map(w(cn2tw)))\n\t\t// @ts-ignore\n\t\t.concat(arr.map(w(cjk2zhs)))\n\t\t// @ts-ignore\n\t\t.concat(arr.map(w(cjk2jp)))\n\t\t.filter(function (value, index, array)\n\t\t{\n\t\t\treturn array.indexOf(value) == index;\n\t\t})\n\t\t;\n\n\tfunction w(fn, ...argv)\n\t{\n\t\treturn function (s)\n\t\t{\n\t\t\treturn fn(s, options);\n\t\t}\n\t}\n}\n\n/**\n * 用來標準化字串 作為排序用\n */\nexport function slugify(input: string, options?: IOptions, unsafe2?: boolean): string\n/**\n * 用來標準化字串 作為排序用\n */\nexport function slugify(input: string, unsafe2?: boolean): string\nexport function slugify(input: string, options: IOptions | boolean = {}, unsafe2?: boolean): string\n{\n\tif (typeof options === 'boolean')\n\t{\n\t\t[unsafe2, options] = [options, {}];\n\t}\n\n\toptions = (options || {}) as IOptions;\n\n\toptions = {\n\t\t...options,\n\t\toptionsZhTable: {\n\t\t\tsafe: false,\n\t\t\tgreedyTable: true,\n\t\t\t...options.optionsZhTable,\n\t\t},\n\t};\n\n\tlet k = unsafe2 ? greedyTableReplace(input) : input;\n\tlet arr: string[][] = charTableList(k, options);\n\n\treturn arr\n\t\t.reduce(function (s, a)\n\t\t{\n\t\t\ts.push(a[0]);\n\t\t\treturn s\n\t\t}, [])\n\t\t.join('')\n}\n\nexport default exports as typeof import('./list');\n"]}