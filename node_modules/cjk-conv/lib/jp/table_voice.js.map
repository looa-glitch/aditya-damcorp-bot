{"version":3,"file":"table_voice.js","sourceRoot":"","sources":["table_voice.ts"],"names":[],"mappings":"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","sourcesContent":["import { array_unique } from 'array-hyper-unique';\n\nconst table_voice_core = {\n\t'か': [\n\t\t'か',\n\t\t'が',\n\t],\n\t'き': [\n\t\t'き',\n\t\t'ぎ',\n\t],\n\t'く': [\n\t\t'く',\n\t\t'ぐ',\n\t],\n\t'け': [\n\t\t'け',\n\t\t'げ',\n\t],\n\t'こ': [\n\t\t'こ',\n\t\t'ご',\n\t],\n\t'さ': [\n\t\t'さ',\n\t\t'ざ',\n\t],\n\t'し': [\n\t\t'し',\n\t\t'じ',\n\t],\n\t'す': [\n\t\t'す',\n\t\t'ず',\n\t],\n\t'せ': [\n\t\t'せ',\n\t\t'ぜ',\n\t],\n\t'そ': [\n\t\t'そ',\n\t\t'ぞ',\n\t],\n\t'た': [\n\t\t'た',\n\t\t'だ',\n\t],\n\t'ち': [\n\t\t'ち',\n\t\t'ぢ',\n\t],\n\t'つ': [\n\t\t'つ',\n\t\t'づ',\n\t],\n\t'て': [\n\t\t'て',\n\t\t'で',\n\n\t],\n\t'と': [\n\t\t'と',\n\t\t'ど',\n\n\t],\n\t'は': [\n\t\t'は',\n\t\t'ば',\n\t\t'ぱ',\n\t],\n\t'ひ': [\n\t\t'ひ',\n\t\t'び',\n\t\t'ぴ',\n\t],\n\t'ふ': [\n\t\t'ふ',\n\t\t'ぶ',\n\t\t'ぷ',\n\t],\n\t'へ': [\n\t\t'へ',\n\t\t'べ',\n\t\t'ぺ',\n\t],\n\t'ほ': [\n\t\t'ほ',\n\t\t'ぼ',\n\t\t'ぽ',\n\t],\n\t//------------------\n\t'カ': [\n\t\t'カ',\n\t\t'ガ',\n\t],\n\t'キ': [\n\t\t'キ',\n\t\t'ギ',\n\t],\n\t'ク': [\n\t\t'ク',\n\t\t'グ',\n\t],\n\t'ケ': [\n\t\t'ケ',\n\t\t'ゲ',\n\t],\n\t'コ': [\n\t\t'コ',\n\t\t'ゴ',\n\t],\n\t'サ': [\n\t\t'サ',\n\t\t'ザ',\n\t],\n\t'シ': [\n\t\t'シ',\n\t\t'ジ',\n\t],\n\t'ス': [\n\t\t'ス',\n\t\t'ズ',\n\t],\n\t'セ': [\n\t\t'セ',\n\t\t'ゼ',\n\t],\n\t'ソ': [\n\t\t'ソ',\n\t\t'ゾ',\n\t],\n\t'タ': [\n\t\t'タ',\n\t\t'ダ',\n\t],\n\t'チ': [\n\t\t'チ',\n\t\t'ヂ',\n\t],\n\t'ツ': [\n\t\t'ツ',\n\t\t'ヅ',\n\t],\n\t'テ': [\n\t\t'テ',\n\t\t'デ',\n\t],\n\t'ト': [\n\t\t'ト',\n\t\t'ド',\n\t],\n\t'ハ': [\n\t\t'ハ',\n\t\t'バ',\n\t\t'パ',\n\t],\n\t'ヒ': [\n\t\t'ヒ',\n\t\t'ビ',\n\t\t'ピ',\n\t],\n\t'フ': [\n\t\t'フ',\n\t\t'ブ',\n\t\t'プ',\n\t],\n\t'ヘ': [\n\t\t'ヘ',\n\t\t'ベ',\n\t\t'ペ',\n\t],\n\t'ホ': [\n\t\t'ホ',\n\t\t'ボ',\n\t\t'ポ',\n\t],\n} as const;\n\n/**\n * 清濁音\n * 'string' => [清音, 濁音, 半濁音]\n */\nexport const table_voice = Object.freeze(_buildTablePlus(table_voice_core));\n\nexport const enum EnumTableVoice\n{\n\t/**\n\t * 清音\n\t */\n\t'01',\n\t/**\n\t * 濁音\n\t */\n\t'02',\n\t/**\n\t * 半濁音\n\t */\n\t'03',\n}\n\n/**\n * 所有清濁音 字元列表\n */\nexport type ITableVoiceKeys = keyof typeof table_voice;\n\n/**\n * [清音, 濁音, 半濁音]\n */\nexport type ITableVoiceValues = readonly [string, string, string?];\n\nexport function hasVoiceTable(char: ITableVoiceKeys): EnumTableVoice | 0\n{\n\treturn (table_voice[char] && table_voice[char].length) || 0\n}\n\nexport function _get(char: string | ITableVoiceKeys, idx: EnumTableVoice): string\n{\n\tif (!char.length)\n\t{\n\t\tthrow new TypeError(`char: '${char}', not valid`)\n\t}\n\telse if (idx !== EnumTableVoice['01'] && idx !== EnumTableVoice['02'] && idx !== EnumTableVoice['03'])\n\t{\n\t\tthrow new TypeError(`char: '${char}', not valid`)\n\t}\n\n\tif (table_voice[char])\n\t{\n\t\treturn table_voice[char][idx]\n\t}\n}\n\n\n/**\n * 清濁音\n * [清音, 濁音, 半濁音]\n */\nexport function getVoiceAll(char: string | ITableVoiceKeys): ITableVoiceValues\n{\n\treturn table_voice[char]\n}\n\n/**\n * 清音\n */\nexport function toVoice01(char: string | ITableVoiceKeys): string\n{\n\treturn _get(char, EnumTableVoice['01'])\n}\n\n/**\n * 濁音\n */\nexport function toVoice02(char: string | ITableVoiceKeys): string\n{\n\treturn _get(char, EnumTableVoice['02'])\n}\n\n/**\n * 半濁音\n */\nexport function toVoice03(char: string | ITableVoiceKeys): string\n{\n\treturn _get(char, EnumTableVoice['03'])\n}\n\ntype IArrayOrReadonly<U> = U[] | readonly U[];\n\nexport function _buildTablePlus<T extends string, U extends string>(table_plus: Record<T, IArrayOrReadonly<U>>): Record<U | T, ITableVoiceValues>\n{\n\tObject.keys(table_plus)\n\t\t.forEach(function (key)\n\t\t{\n\t\t\ttable_plus[key] = Object.freeze(array_unique(table_plus[key]));\n\n\t\t\ttable_plus[key].forEach(function (s)\n\t\t\t{\n\t\t\t\ttable_plus[s] = table_plus[key];\n\t\t\t})\n\t\t})\n\t;\n\n\t// @ts-ignore\n\treturn table_plus\n}\n\n/**\n * 清濁音\n * [清音, 濁音, 半濁音]\n */\nexport default getVoiceAll\n"]}