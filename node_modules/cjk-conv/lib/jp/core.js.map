{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/24/024.\n *\n * this module only do the char is exists in jp, zht, zhs\n * so don't use this module when u wanna fully zht <=> zhs\n *\n * 目前只支援 簡繁日漢字 並非全 cjk 漢字支援\n */\n\nimport { split } from '../util';\nimport ZHJP_TABLE, { TABLE_SAFE as ZHJP_TABLE_SAFE } from './table';\nimport { _re_cjk_conv } from 'regexp-helper/lib/cjk-conv';\n\nexport { ZHJP_TABLE, ZHJP_TABLE_SAFE };\n\nexport const KEY_JP = 'jp';\nexport const KEY_ZHT = 'zht';\nexport const KEY_ZHS = 'zhs';\n\nexport type IKEY_FROM_TO = typeof KEY_JP | typeof KEY_ZHT | typeof KEY_ZHS | 'jp' | 'zht' | 'zhs';\n\nlet inited = false;\n\nexport let TABLE: ITABLE_MAIN;\n\nexport let TABLE_SAFE: ITABLE_MAIN;\n\nexport interface ITABLE_MAIN\n{\n\t[KEY_JP]: ITABLE,\n\t[KEY_ZHT]: ITABLE,\n\t[KEY_ZHS]: ITABLE,\n}\n\nexport interface ITABLE\n{\n\t[key: string]: ITABLESUB\n}\n\nexport interface ITABLESUB\n{\n\t[KEY_JP]: string,\n\t[KEY_ZHT]: string,\n\t[KEY_ZHS]: string,\n}\n\nexport interface IOptions\n{\n\t/**\n\t * 忽略的字 or 任何支援 indexOf 的 Object\n\t */\n\tskip?,\n\t/**\n\t * safe mode\n\t */\n\tsafe?: boolean,\n}\n\nexport const defaultOptions: IOptions = {\n\tsafe: true,\n};\n\n// /[\\u4E00-\\u9FFF\\u{20000}-\\u{2FA1F}]+/u\nconst REGEXP_TEST = new RegExp(_re_cjk_conv('u').source + '+', 'u');\n\nnamespace _\n{\n\tinit();\n\n\texport let jp2zht: IFrom2To;\n\texport let jp2zhs: IFrom2To;\n\texport let zht2jp: IFrom2To;\n\texport let zht2zhs: IFrom2To;\n\texport let zhs2jp: IFrom2To;\n\texport let zhs2zht: IFrom2To;\n\n\tlet langs = Object.keys(TABLE);\n\n\tlangs.forEach(function (from: IKEY_FROM_TO)\n\t{\n\t\tlangs.forEach(function (to: IKEY_FROM_TO)\n\t\t{\n\t\t\tif (from == to) return;\n\n\t\t\t_[`${from}2${to}`] = function (str, options?: IOptions): string\n\t\t\t{\n\t\t\t\tif (!REGEXP_TEST.test(str.toString()))\n\t\t\t\t{\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\n\t\t\t\toptions = Object.assign({}, defaultOptions, options);\n\n\t\t\t\treturn split(str)\n\t\t\t\t\t.map(function (char: string)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet c: string;\n\t\t\t\t\t\tif (c = _getdata(char, from, to, options.safe))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn char;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')\n\t\t\t\t\t;\n\t\t\t} as IFrom2To;\n\t\t});\n\t});\n}\n\n/**\n * only 只將 日文漢字 => 轉為繁漢字\n * @type {IFrom2To}\n */\nexport const jp2zht = _.jp2zht as IFrom2To;\n/**\n * only 只將 日文漢字 => 轉為簡漢字\n * @type {IFrom2To}\n */\nexport const jp2zhs = _.jp2zhs as IFrom2To;\n\n/**\n * only 簡漢字 => 轉為日漢字\n * @type {IFrom2To}\n */\nexport const zhs2jp = _.zhs2jp;\n\n/**\n * only 只將 繁漢字 => 轉為日文漢字\n * @type {IFrom2To}\n */\nexport const zht2jp = _.zht2jp;\n\n/**\n * only 只將簡繁日 當中共通的 繁漢字 => 轉為簡漢字\n * 請勿作為簡繁轉換用\n * @type {IFrom2To}\n */\nexport const zht2zhs = _.zht2zhs;\n\n/**\n * only 只將簡繁日 當中共通的 簡漢字 => 轉為繁漢字\n * 請勿作為簡繁轉換用\n * @type {IFrom2To}\n */\nexport const zhs2zht = _.zhs2zht;\n\n/**\n * only 只將簡繁日 當中共通的 簡繁漢字 => 轉為日文漢字\n *\n * @alias cjk2jp\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function zh2jp(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn split(str)\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_ZHT, KEY_JP, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHS, KEY_JP, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\n/**\n * only 只將簡繁日 當中共通的 簡繁漢字 => 轉為日文漢字\n *\n * @alias zh2jp\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport const cjk2jp = zh2jp;\n\n/**\n * only 只將簡繁日 當中共通的 漢字 => 轉為繁體漢字\n * 請勿作為簡繁轉換用\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function cjk2zht(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn split(str)\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_JP, KEY_ZHT, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHS, KEY_ZHT, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\n/**\n * only 只將簡繁日 當中共通的 漢字 => 轉為簡體漢字\n * 請勿作為簡繁轉換用\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function cjk2zhs(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn split(str)\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_JP, KEY_ZHS, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHT, KEY_ZHS, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\n//import * as fs from 'fs-extra';\n//fs.outputJSON('./teachKanjiComparison.cache.json', TABLE, {\n//\tspaces: \"\\t\",\n//});\n//fs.outputJSON('./teachKanjiComparison.cache2.json', TABLE_SAFE, {\n//\tspaces: \"\\t\",\n//});\n//\n//console.log(zhs2jp(1));\n//\n//let t = '魔物解説　ランク等話　蚀蝕蝕王で触王 冒険者ギルド解説 蚀|蝕战|戦马|馬亚|亞國預中日漢字對照表'\n//\n//console.log(zh2jp(t));\n//console.log(zht2jp(t));\n//console.log(zhs2jp(t));\n//\n//console.log(zht2zhs(t));\n//console.log(zhs2zht(t));\n\nexport function init(overwrite?: boolean)\n{\n\tif (inited && !overwrite)\n\t{\n\t\treturn TABLE;\n\t}\n\n\tTABLE = _(ZHJP_TABLE);\n\tTABLE_SAFE = _(ZHJP_TABLE_SAFE);\n\n\tfunction _(src): ITABLE_MAIN\n\t{\n\t\tlet to = {};\n\t\tto[KEY_JP] = {} as ITABLE;\n\t\tto[KEY_ZHT] = {} as ITABLE;\n\t\tto[KEY_ZHS] = {} as ITABLE;\n\n\t\tsrc.forEach(function (vrow: string[])\n\t\t{\n\t\t\tlet [jp, zht, zhs] = vrow;\n\n\t\t\tlet k = KEY_JP;\n\t\t\tfor (let c of jp)\n\t\t\t{\n\t\t\t\tif (!c || to[k][c])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tto[k][c] = to[k][c] || {} as ITABLESUB;\n\n\t\t\t\tto[k][c][k] = c;\n\t\t\t\tto[k][c][KEY_ZHT] = zht[0];\n\t\t\t\tto[k][c][KEY_ZHS] = zhs[0];\n\t\t\t}\n\n\t\t\tk = KEY_ZHT;\n\t\t\tfor (let c of zht)\n\t\t\t{\n\t\t\t\tif (!c || to[k][c])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tto[k][c] = to[k][c] || {} as ITABLESUB;\n\n\t\t\t\tto[k][c][KEY_JP] = jp[0];\n\t\t\t\tto[k][c][k] = c;\n\t\t\t\tto[k][c][KEY_ZHS] = zhs[0];\n\t\t\t}\n\n\t\t\tk = KEY_ZHS;\n\t\t\tfor (let c of zhs)\n\t\t\t{\n\t\t\t\tif (!c || to[k][c])\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tto[k][c] = to[k][c] || {} as ITABLESUB;\n\n\t\t\t\tto[k][c][KEY_JP] = jp[0];\n\t\t\t\tto[k][c][KEY_ZHT] = zht[0];\n\t\t\t\tto[k][c][k] = c;\n\t\t\t}\n\t\t});\n\n\t\t// @ts-ignore\n\t\treturn to;\n\t}\n\n\tinited = true;\n\n\treturn TABLE;\n}\n\nexport function _getdata(char: string, from: IKEY_FROM_TO, to: IKEY_FROM_TO, safe?: boolean): string\n{\n\tif (safe)\n\t{\n\t\treturn (TABLE_SAFE[from][char]) ? TABLE_SAFE[from][char][to] : null;\n\t}\n\n\treturn (TABLE[from][char]) ? TABLE[from][char][to] : null;\n}\n\nexport interface IFrom2To extends Function\n{\n\t(str, options?: IOptions): string;\n}\n\nexport default exports as typeof import('./core');\n"]}