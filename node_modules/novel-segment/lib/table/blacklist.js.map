{"version":3,"file":"blacklist.js","sourceRoot":"","sources":["blacklist.ts"],"names":[],"mappings":";;;AAMA,iCAAmC;AAGnC;IAAA,MAAa,kBAAmB,SAAQ,cAAa;QAIpD,YAAY,OAAe,kBAAkB,CAAC,IAAI,EAAE,UAAoB,EAAE,EAAE,GAAG,IAAI;YAElF,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;QAC9B,CAAC;;IALe,uBAAI,+BAA8B;IAMnD,yBAAC;KAAA;AARY,gDAAkB;AAU/B,kBAAe,kBAAkB,CAAA","sourcesContent":["import { IDICT_SYNONYM, IWord } from '../Segment';\nimport { IDictRow, stringifyLine } from '@novel-segment/loader-line';\nimport CjkConv from 'cjk-conv';\nimport { cloneDeep } from '../util';\nimport { text_list } from '../util/cjk';\nimport AbstractTableDictCore, { IDICT, IDICT2, IOptions } from './core';\nimport TableDictLine from './line';\nimport { EnumDictDatabase } from '../const';\n\nexport class TableDictBlacklist extends TableDictLine\n{\n\tstatic readonly type = EnumDictDatabase.BLACKLIST;\n\n\tconstructor(type: string = TableDictBlacklist.type, options: IOptions = {}, ...argv)\n\t{\n\t\tsuper(type, options, ...argv)\n\t}\n}\n\nexport default TableDictBlacklist\n"]}