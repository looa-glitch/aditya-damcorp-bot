{"version":3,"file":"synonym.js","sourceRoot":"","sources":["synonym.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAOH,mDAAwD;AAUxD;;;;;GAKG;AACH,MAAa,gBAAiB,SAAQ,qCAAqB;IAG1D,YAAY,OAAe,gBAAgB,CAAC,IAAI,EAAE,UAAoB,EAAE,EAAE,GAAG,IAAI;QAEhF,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;QAG9B;;WAEG;QACI,WAAM,GAAoB,EAAE,CAAC;IALpC,CAAC;IAOD,GAAG,CAAC,IAA4B,EAAE,UAAoB;QAErD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAC3C;YACC,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAEjC,IAAI,CAAC,CAAC,EACN;YACC,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1C;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAEtC,IAAI,UAAU,IAAI,IAAI,EACtB;YACC,UAAU,GAAG,IAAI,CAAC;SAClB;QAED,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,KAAK;YAE/B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAEpB,IAAI,CAAC,EAAE,EACP;gBACC,IAAI,KAAK,IAAI,CAAC,EACd;oBACC,MAAM,IAAI,SAAS,EAAE,CAAC;iBACtB;gBAED,OAAO;aACP;YAED,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,EACtD;gBACC,OAAO;aACP;YAED,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEjB,oBAAoB;QACrB,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACb,CAAC;CAED;AAhED,4CAgEC;AAED,kBAAe,gBAAgB,CAAA","sourcesContent":["/**\n * Created by user on 2018/4/19/019.\n */\n\nimport { IDICT_SYNONYM, IWord } from '../Segment';\nimport { IDictRow } from 'segment-dict/lib/loader/segment';\nimport CjkConv from 'cjk-conv';\nimport { text_list } from '../util/cjk';\nimport AbstractTableDictCore, { IDICT, IDICT2, IOptions } from './core';\nimport { TableDictSynonymPanGu } from './synonym.pangu';\nimport UString from 'uni-string';\n\nexport type ArrayTwoOrMore<T> = {\n\t0: T,\n\t1: T,\n\t[n: number]: T,\n\tlength: number,\n}\n\n/**\n * 請注意 這與原版 node-segment 的格式不同\n *\n * 原版為一對一 => 錯字,正字\n * 這裡為一對多 並且順序與原版相反 => 正字,錯字,...以,分隔更多字\n */\nexport class TableDictSynonym extends TableDictSynonymPanGu\n{\n\n\tconstructor(type: string = TableDictSynonym.type, options: IOptions = {}, ...argv)\n\t{\n\t\tsuper(type, options, ...argv)\n\t}\n\n\t/**\n\t * 緩存主KEY\n\t */\n\tpublic TABLE2: IDICT<string[]> = {};\n\n\tadd(data: ArrayTwoOrMore<string>, skipExists?: boolean)\n\t{\n\t\tif (!Array.isArray(data) || data.length < 2)\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tlet w = this._trim(data.shift());\n\n\t\tif (!w)\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tlet self = this;\n\n\t\tself.TABLE2[w] = self.TABLE2[w] || [];\n\n\t\tif (skipExists == null)\n\t\t{\n\t\t\tskipExists = true;\n\t\t}\n\n\t\tdata.forEach(function (bw, index)\n\t\t{\n\t\t\tbw = self._trim(bw);\n\n\t\t\tif (!bw)\n\t\t\t{\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tthrow new TypeError();\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (skipExists && self.exists(bw) || bw in self.TABLE2)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.TABLE2[w].push(bw);\n\t\t\tself._add(bw, w);\n\n\t\t\t//skipExists = true;\n\t\t});\n\n\t\treturn this;\n\t}\n\n}\n\nexport default TableDictSynonym\n"]}