{"version":3,"file":"synonym.pangu.js","sourceRoot":"","sources":["synonym.pangu.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAMH,iCAAwE;AAExE;;GAEG;AACH;IAAA,MAAa,qBAAsB,SAAQ,cAA6B;QAIvE,YAAY,OAAe,qBAAqB,CAAC,IAAI,EAAE,UAAoB,EAAE,EAAE,GAAG,IAAI;YAErF,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;QAC9B,CAAC;QAED,GAAG,CAAC,IAAiC,EAAE,UAAoB;YAE1D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAC5C;gBACC,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1C;YAED,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EACZ;gBACC,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1C;YAED,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtC;gBACC,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5B,OAAO,IAAI,CAAC;QACb,CAAC;QAED,IAAI,CAAC,EAAU,EAAE,EAAU;YAE1B,IAAI,EAAE,KAAK,EAAE,EACb;gBACC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;aACpB;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,EACzB;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACtB;QACF,CAAC;QAES,KAAK,CAAC,CAAS;YAExB,OAAO,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC;;IAhDe,0BAAI,GAAG,SAAS,CAAC;IAkDlC,4BAAC;KAAA;AApDY,sDAAqB;AAsDlC,kBAAe,qBAAqB,CAAA","sourcesContent":["/**\n * Created by user on 2018/4/19/019.\n */\n\nimport { IDICT_SYNONYM, IWord } from '../Segment';\nimport { IDictRow } from 'segment-dict/lib/loader/segment';\nimport CjkConv from 'cjk-conv';\nimport { text_list } from '../util/cjk';\nimport AbstractTableDictCore, { IDICT, IDICT2, IOptions } from './core';\n\n/**\n * 原版 node-segment 的格式\n */\nexport class TableDictSynonymPanGu extends AbstractTableDictCore<string>\n{\n\tstatic readonly type = 'SYNONYM';\n\n\tconstructor(type: string = TableDictSynonymPanGu.type, options: IOptions = {}, ...argv)\n\t{\n\t\tsuper(type, options, ...argv)\n\t}\n\n\tadd(data: [string, string] & string[], skipExists?: boolean)\n\t{\n\t\tif (!Array.isArray(data) || data.length != 2)\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tdata[0] = this._trim(data[0]);\n\t\tdata[1] = this._trim(data[1]);\n\n\t\tif (!data[0])\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tif (skipExists && this.exists(data[0]))\n\t\t{\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._add(data[0], data[1]);\n\n\t\treturn this;\n\t}\n\n\t_add(n1: string, n2: string)\n\t{\n\t\tif (n1 !== n2)\n\t\t{\n\t\t\tthis.TABLE[n1] = n2;\n\t\t}\n\n\t\tif (this.TABLE[n2] === n1)\n\t\t{\n\t\t\tdelete this.TABLE[n2];\n\t\t}\n\t}\n\n\tprotected _trim(s: string)\n\t{\n\t\treturn s.replace(/^\\s+|\\s+$/g, '').trim();\n\t}\n\n}\n\nexport default TableDictSynonymPanGu\n"]}