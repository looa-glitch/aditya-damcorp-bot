{"version":3,"file":"JpSimpleTokenizer.js","sourceRoot":"","sources":["JpSimpleTokenizer.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,gCAAyD;AAKzD,IAAkB,yBAYjB;AAZD,WAAkB,yBAAyB;IAE1C;;;OAGG;IACH,iFAAc,CAAA;IACd;;;OAGG;IACH,iFAAc,CAAA;AACf,CAAC,EAZiB,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAY1C;AAED;IAAA,MAAa,iBAAkB,SAAQ,yBAAmB;QAA1D;;YAIC,SAAI,GAAG,mBAA4B,CAAC;QAyDrC,CAAC;QAvDA,KAAK,CAAC,KAAc,EAAE,GAAG,IAAI;YAE5B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACjD,CAAC;QAES,mBAAmB,CAAuB,IAAO,EAAE,IAA+B;YAE3F,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE;gBAC7B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI;aACjB,EAAE,IAAI,CAAC,CAAC;QACV,CAAC;QAES,UAAU,CAAC,IAAY;YAEhC,qCAAqC;YAErC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAElC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EACd;gBACC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EACpE;oBACC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC;4BAChC,CAAC,EAAE,IAAI;yBACP,EAAE,EAAE,CAAC,CAAC,kBAAoC,CAAC,iBAAmC,CAC9E,CAAC,CAAC;iBACH;gBAED,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,GAAG,GAAY,EAAE,CAAC;YAEtB,IAAI;iBACF,KAAK,CAAC,6EAA6E,CAAC;iBACpF,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;gBAEtB,IAAI,CAAC,KAAK,EAAE,EACZ;oBACC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;wBACjC,CAAC;qBACD,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClB,CAAC,iBAAmC,CACrC,CAAC,CAAC;iBACH;YACF,CAAC,CAAC,CAEF;YAED,OAAO,GAAG,CAAC;QACZ,CAAC;;IAzDM,sBAAI,GAAG,mBAA4B,CAAC;IA2D5C,wBAAC;KAAA;AA7DY,8CAAiB;AA+DjB,QAAA,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAkC,CAAC;AAEpG,kBAAe,iBAAiB,CAAC","sourcesContent":["/**\n * Created by user on 2018/4/19/019.\n */\n\nimport { SubSModule, SubSModuleTokenizer } from '../mod';\nimport { Segment, IWord } from '../Segment';\nimport UString from 'uni-string';\nimport { IWordDebug, IWordDebugInfo } from '../util';\n\nexport const enum EnumJpSimpleTokenizerType\n{\n\t/**\n\t * 平仮名\n\t * https://en.wikipedia.org/wiki/Hiragana\n\t */\n\tHIRAGANA = 0x1,\n\t/**\n\t * 片仮名\n\t * https://en.wikipedia.org/wiki/Katakana\n\t */\n\tKATAKANA = 0x2,\n}\n\nexport class JpSimpleTokenizer extends SubSModuleTokenizer\n{\n\tstatic NAME = 'JpSimpleTokenizer' as const;\n\n\tname = 'JpSimpleTokenizer' as const;\n\n\tsplit(words: IWord[], ...argv): IWord[]\n\t{\n\t\treturn this._splitUnset(words, this._splitText);\n\t}\n\n\tprotected createJpSimpleToken<T extends IWordDebug>(data: T, type: EnumJpSimpleTokenizerType)\n\t{\n\t\treturn super.debugToken(data, {\n\t\t\t[this.name]: type,\n\t\t}, true);\n\t}\n\n\tprotected _splitText(text: string): IWord[]\n\t{\n\t\t//const POSTAG = this.segment.POSTAG;\n\n\t\tlet self = this;\n\n\t\tlet b1 = /[ぁ-ん]/.test(text);\n\t\tlet b2 = /[ァ-ヴーｱ-ﾝﾞｰ]/.test(text);\n\n\t\tif (!b1 || !b2)\n\t\t{\n\t\t\tif (b1 && /^[ぁ-ん]+$/.test(text) || b2 && /^[ァ-ヴーｱ-ﾝﾞｰ]+$/.test(text))\n\t\t\t{\n\t\t\t\treturn [self.createJpSimpleToken({\n\t\t\t\t\tw: text,\n\t\t\t\t}, b1 ? EnumJpSimpleTokenizerType.HIRAGANA : EnumJpSimpleTokenizerType.KATAKANA\n\t\t\t\t)];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tlet ret: IWord[] = [];\n\n\t\ttext\n\t\t\t.split(/((?:[^ァ-ヴーｱ-ﾝﾞｰ]+)?[ぁ-ん]+(?=[ァ-ヴーｱ-ﾝﾞｰ])|(?:[^ぁ-ん]+)?[ァ-ヴーｱ-ﾝﾞｰ]+(?=[ぁ-ん]))/)\n\t\t\t.forEach(function (w, i)\n\t\t\t{\n\t\t\t\tif (w !== '')\n\t\t\t\t{\n\t\t\t\t\tret.push(self.createJpSimpleToken({\n\t\t\t\t\t\tw,\n\t\t\t\t\t}, /[ぁ-ん]/.test(w) ? EnumJpSimpleTokenizerType.HIRAGANA\n\t\t\t\t\t\t\t: EnumJpSimpleTokenizerType.KATAKANA\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t})\n\n\t\t;\n\n\t\treturn ret;\n\t}\n\n}\n\nexport const init = JpSimpleTokenizer.init.bind(JpSimpleTokenizer) as typeof JpSimpleTokenizer.init;\n\nexport default JpSimpleTokenizer;\n\n"]}