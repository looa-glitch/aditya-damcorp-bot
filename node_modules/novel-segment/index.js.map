{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,YAAY,CAAC;;AAEb,2CAAiI;AACjI,yCAAsC;AAEtC,MAAM,QAAQ,GAAG,iBAmBhB,CAAC;AAEF,MAAM,SAAS,GAAG,QAEjB,CAAC;AAKF,8CAA+C;AAC/C,sCAAuC;AACvC,0CAA2C;AAC3C,gDAAiD;AAEjD,SAAS,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;AAC1C,SAAS,CAAC,YAAY,GAAG,aAAa,CAAC,OAAO,CAAC;AAElC,QAAA,QAAQ,GAErB,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,EAAE;IAC5D,eAAe,EAAE,aAAa,CAAC,OAAO;IACtC,cAAc,EAAE,aAAa,CAAC,OAAO;IACrC,aAAa;IACb,YAAY,EAAE,WAAW,CAAC,OAAiB;IAC3C,UAAU,EAAE,SAAS,CAAC,OAAO;CAC7B,CAAC,CAAC;AAEH,SAAS,CAAC,MAAM,GAAG,eAAM,CAAC;AAC1B,SAAS,CAAC,OAAO,GAAG,iBAAO,CAAC;AAC5B,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;AAtB9B,iBAAS,SAAS,CAAC","sourcesContent":["/**\n * 中文分词器\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n'use strict';\n\nimport { Segment, IWord, IDICT, IOptionsSegment, IDICT2, IDICT_STOPWORD, IDICT_SYNONYM, IOptionsDoSegment } from './lib/Segment';\nimport { POSTAG } from './lib/POSTAG';\n\nconst _Segment = Segment as typeof Segment & {\n\tversion: string,\n\tversion_dict: string,\n\n\tversions: {\n\t\t'novel-segment': string,\n\t\t'segment-dict': string,\n\t\t'regexp-cjk': string,\n\t\t'cjk-conv': string,\n\t},\n\n\t/**\n\t * 分词接口\n\t */\n\tSegment: typeof Segment,\n\t/**\n\t * 词性接口\n\t */\n\tPOSTAG: typeof POSTAG,\n};\n\nconst __Segment = _Segment as typeof _Segment & {\n\tdefault: typeof _Segment,\n};\n\n// @ts-ignore\nexport = __Segment;\n\nimport _segment_dict = require('segment-dict');\nimport _cjk_conv = require('cjk-conv');\nimport _regexp_cjk = require('regexp-cjk');\nimport _package_json = require('./package.json');\n\n__Segment.version = _package_json.version;\n__Segment.version_dict = _segment_dict.version;\n\nexport const versions =\n\n__Segment.versions = Object.assign(__Segment.versions || {}, {\n\t'novel-segment': _package_json.version,\n\t'segment-dict': _segment_dict.version,\n\t// @ts-ignore\n\t'regexp-cjk': _regexp_cjk.version as string,\n\t'cjk-conv': _cjk_conv.version,\n});\n\n__Segment.POSTAG = POSTAG;\n__Segment.Segment = Segment;\n__Segment.default = __Segment;\n\n/*\n使用示例：\n\nvar segment = new Segment();\n// 使用默认的识别模块及字典\nsegment.useDefault();\n// 开始分词\nconsole.log(segment.doSegment('这是一个基于Node.js的中文分词模块。'));\n*/\n"]}